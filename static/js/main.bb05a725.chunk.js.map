{"version":3,"sources":["config/history.ts","config/axios.ts","components/Tomatoes/CountDownHook.tsx","redux/actions/todoActions.ts","redux/actionTypes.ts","components/Statistics/Polygon.tsx","components/Statistics/TodoHistoryItem.tsx","components/Statistics/TodoHistory.tsx","components/Statistics/Statistics.tsx","components/Todos/TodoInput.tsx","components/Todos/TodoItem.tsx","components/Todos/Todos.tsx","constants/Sign.ts","components/Tomatoes/TomatoAction.tsx","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","redux/actions/tomatoActions.ts","components/Home/Home.tsx","components/Login/Login.tsx","components/SignUp/SignUp.tsx","App.tsx","serviceWorker.ts","redux/reducers/index.ts","redux/reducers/todos.ts","redux/reducers/tomatoes.ts","redux/store.ts","index.tsx"],"names":["publicUrl","history","createBrowserHistory","basename","n","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","toString","status","log","push","timerId","updateTodo","payload","type","Polygon","points","dates","Object","keys","props","data","sort","a","b","Date","parse","firstDay","range","getTime","finishedCount","finishedY","pointsArr","map","date","x","y","length","totalFinishedCount","join","className","id","fill","stroke","strokeWidth","this","Component","TodoHistoryItem","params","put","resource","Error","action","timeFormat","time","updated_at","itemType","onClick","completed","deleted","created_at","format","description","mapDispatchToProps","connect","TabPane","Tabs","TodoHistory","finishedTodoList","finishedDates","key","dailyFinishedTodos","todo","deletedTodoList","deletedTodos","defaultActiveKey","tab","todos","filter","t","_","groupBy","finishedTodos","state","ownProps","Statistics","style","color","dailyTodos","TodoInput","onChange","value","setState","postTodo","post","addTodo","placeholder","allowClear","e","target","onKeyUp","handleKeyUp","then","TodoItem","handleEditTextChange","val","editText","Editing","handelKeyUp","autoFocus","submit","update","Text","todoItemClass","classNames","editing","editable","onDoubleClick","editTodo","checked","TreeNode","Tree","Todos","isTodoEditable","completed_at","unCompletedTodos","showLine","switcherIcon","title","completedTodos","unDeletedTodos","TITLE","CountDownHook","useState","timer","countDown","setCountDown","min","Math","floor","sec","useEffect","document","window","setInterval","onFinish","clearInterval","percent","duration","width","confirm","Modal","TomatoAction","forceUpdate","abortTomato","updateTomato","aborted","unfinishedTomato","ended_at","showConfirm","onOk","onCancel","cancelText","okText","showcase","undefined","block","startTomato","started_at","now","antIcon","fontSize","spin","TomatoItem","TomatoList","spinning","list","d","tomatoes","finishedTomatoes","indicator","splice","Tomatoes","addTomato","tomato","Tomato","Icon","createFromIconfontCN","scriptUrl","Home","logout","getMe","get","user","getTodos","resources","assign","initTodos","getTomatoes","initTomatoes","handleOk","visible","handleCancel","showModal","onInputValChange","Number","notification","open","message","menu","textAlign","Item","preventDefault","max","defaultValue","overlay","cursor","account","Login","name","newState","password","prefix","Password","onKeyDown","handleKeyDown","to","SignUp","passwordConfirmed","pathname","App","exact","path","component","Boolean","location","hostname","match","combineReducers","store","createStore","rootReducer","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bb05a725.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\"\r\n\r\nconst ENV = process.env.NODE_ENV\r\nlet publicUrl: string = \"\"\r\n\r\nif (ENV === \"development\") {\r\n  publicUrl = \"/\"\r\n} else if (ENV === \"production\") {\r\n  publicUrl = \"/PomodoroTimer\"\r\n}\r\n\r\nconst history = createBrowserHistory({\r\n  basename: publicUrl\r\n})\r\n\r\n\r\nexport default history\r\n","import axios, { AxiosRequestConfig } from \"axios\"\r\nimport history from \"./history\"\r\n\r\nconst appID = \"HEtRxRQ3APDWy3eHKYme5KjY\"\r\nconst appSecret = \"aJsNpHpJ26HyfhmuPCeWR1ip\"\r\nlet n = 1\r\nconst instance = axios.create({\r\n  baseURL: \"https://gp-server.hunger-valley.com/\",\r\n  headers: {\r\n    \"t-app-id\": appID,\r\n    \"t-app-secret\": appSecret\r\n  }\r\n})\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config: AxiosRequestConfig) {\r\n  const xToken = localStorage.getItem(\"x-token\")\r\n  if (xToken) {\r\n    config.headers[\"Authorization\"] = `Bearer ${xToken}`\r\n  }\r\n  return config\r\n}, function (error) {\r\n  console.error(error)\r\n  return Promise.reject(error)\r\n})\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(function (response) {\r\n  // Do something with response data\r\n  if (response.headers[\"x-token\"]) {\r\n    localStorage.setItem(\"x-token\", response.headers[\"x-token\"])\r\n    localStorage.setItem(\"count\", n.toString())\r\n    n += 1\r\n  }\r\n  return response\r\n}, function (error) {\r\n  if (error.response?.status === 401) {\r\n    console.log('重定向')\r\n    history.push('/login')\r\n  }\r\n  // Do something with response error\r\n  return Promise.reject(error)\r\n})\r\n\r\nexport default instance\r\n","import { TITLE } from \"constants/Sign\"\r\nimport React, { FC, useEffect, useState } from \"react\"\r\nimport \"./CountDown.scss\"\r\n\r\nlet timerId: number\r\nconst CountDownHook: FC<ICountDownProps> = (props) => {\r\n\tconst [countDown, setCountDown] = useState(props.timer)\r\n\tconst min = Math.floor(countDown / 1000 / 60)\r\n\tconst sec = Math.floor(countDown / 1000 % 60)\r\n\tconst time = `${min < 10 ? `0${min}` : min} : ${sec < 10 ? `0${sec}` : sec}`\r\n\tuseEffect(() => {\r\n\t\tdocument.title = `${time} - Pomodoro Timer`\r\n    timerId = window.setInterval(() => {\r\n      setCountDown(countDown - 1000)\r\n    }, 1000)\r\n    if (countDown < 0) {\r\n      props.onFinish()\r\n      clearInterval(timerId)\r\n      document.title = TITLE\r\n    }\r\n    \r\n    return () => {\r\n      window.clearInterval(timerId)\r\n    }\r\n  })\r\n  const percent = 1 - countDown / props.duration\r\n  return (\r\n    <div className={\"CountDown\"} id={\"CountDown\"}>\r\n      <span className={\"restTime\"}>{min >= 0 || sec >= 0 ? time : `00 : 00`}</span>\r\n      <div className=\"progress\" style={{width: `${percent * 100}%`}}/>\r\n    </div>\r\n  )\r\n}\r\nexport default CountDownHook\r\n","import {ADD_TODO, EDIT_TODO, INIT_TODOS, UPDATE_TODO} from \"../actionTypes\"\n\nexport const addTodo = (payload: ITodo) => ({type: ADD_TODO, payload})\n\nexport const initTodos = (payload: ITodo[]) => ({type: INIT_TODOS, payload})\n\nexport const editTodo = (payload: number) => ({type: EDIT_TODO, payload})\n\nexport const updateTodo = (payload: ITodo) => ({type: UPDATE_TODO, payload})\n","export const ADD_TODO = \"ADD_TODO\"\nexport const INIT_TODOS = \"INIT_TODOS\"\nexport const EDIT_TODO = \"EDIT_TODO\"\nexport const UPDATE_TODO = \"UPDATE_TODO\"\nexport const ADD_TOMATO = \"ADD_TOMATO\"\nexport const INIT_TOMATOES = \"INIT_TOMATOES\"\nexport const UPDATE_TOMATO = \"UPDATE_TOMATO\"\n","import React, {Component} from \"react\"\r\n\r\ninterface IPolygonProps {\r\n  data: any\r\n  totalFinishedCount: number\r\n}\r\n\r\n\r\nclass Polygon extends Component<IPolygonProps> {\r\n  \r\n  points = () => {\r\n    const dates = Object.keys(this.props.data).sort((a, b) => Date.parse(a) - Date.parse(b))\r\n    console.log(\"dates\", dates)\r\n    const firstDay = dates[0]\r\n    if (firstDay) {\r\n      const range = new Date().getTime() - Date.parse(firstDay)\r\n      let finishedCount = 0\r\n      let finishedY = null\r\n      const pointsArr = dates.map(date => {\r\n        const x = (Date.parse(date) - Date.parse(firstDay)) / range * 240\r\n        finishedCount += this.props.data[date].length\r\n        const y = (1 - (finishedCount / this.props.totalFinishedCount)) * 60\r\n        finishedY = y\r\n        return `${x}, ${y}`\r\n      })\r\n      return [\"0,60\", ...pointsArr, `240,${finishedY}`, `240, 60`].join(\" \")\r\n    } else {\r\n      return \"0,60 240,60\"\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className={\"Polygon\"} id={\"Polygon\"}>\r\n        <svg>\r\n          <polygon fill=\"rgba(24, 144, 255, 0.1)\" stroke=\"rgba(24, 144, 255, 0.5)\" strokeWidth=\"1\"\r\n                   points={this.points()}/>\r\n        </svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Polygon\r\n","import axios from \"config/axios\"\r\nimport { format } from \"date-fns\"\r\nimport React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { updateTodo } from \"redux/actions/todoActions\"\r\nimport \"./TodoHistoryItem.scss\"\r\n\r\ninterface ITodoHistoryItemProps extends ITodo {\r\n  itemType: \"deleted\" | \"finished\"\r\n  updateTodo: (params: any) => void\r\n}\r\n\r\nclass TodoHistoryItem extends Component<ITodoHistoryItemProps> {\r\n  updateTodo = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.id}`, params)\r\n      this.props.updateTodo(response.data.resource)\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    let action\r\n    let timeFormat = \"HH:MM\"\r\n    let time = this.props.updated_at\r\n    if (this.props.itemType === \"finished\") {\r\n      action = (\r\n        <div className={\"action\"}>\r\n          <span onClick={() => {this.updateTodo({completed: false})}}>恢复</span>\r\n          <span onClick={() => {this.updateTodo({deleted: true})}}>删除</span>\r\n        </div>\r\n      )\r\n    } else {\r\n      timeFormat = \"yyyy-MM-dd\"\r\n      time = this.props.created_at\r\n      action = (\r\n        <div className={\"action\"}>\r\n          <span onClick={() => {this.updateTodo({deleted: false})}}>恢复</span>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className={\"todoItem\"}>\r\n        <div className=\"text\">\r\n          <span>{format(Date.parse(time), timeFormat)}</span>\r\n          <span>{this.props.description}</span>\r\n        </div>\r\n        {action}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoHistoryItem)\r\n\r\n","import { Tabs } from \"antd\"\r\nimport { format } from \"date-fns\"\r\nimport _ from \"lodash\"\r\nimport React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport \"./TodoHistory.scss\"\r\nimport TodoHistoryItem from \"./TodoHistoryItem\"\r\n\r\nconst { TabPane } = Tabs\r\n\r\ninterface ITodoHistoryProps {\r\n  todos: ITodo[]\r\n}\r\n\r\n\r\nclass TodoHistory extends Component<ITodoHistoryProps> {\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted)\r\n  }\r\n\r\n  get deletedTodos() {\r\n    return this.props.todos.filter(t => t.deleted)\r\n  }\r\n\r\n\r\n  get dailyFinishedTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => format(Date.parse(todo.updated_at), \"yyyy-MM-dd\"))\r\n  }\r\n\r\n  get dailyDeletedTodos() {\r\n    return _.groupBy(this.deletedTodos, (todo) => format(Date.parse(todo.updated_at), \"yyyy-MM-dd\"))\r\n  }\r\n\r\n  get finishedDates() {\r\n    return Object.keys(this.dailyFinishedTodos)\r\n  }\r\n\r\n  render() {\r\n    const finishedTodoList = this.finishedDates.map(date => {\r\n      return (\r\n        <div key={date} className={\"dailyTodos\"}>\r\n          <div className={\"summary\"}>\r\n            <p className=\"date\">\r\n              <span>{date}</span>\r\n              <span>{format(Date.parse(date), 'cccc')}</span>\r\n            </p>\r\n            <p className={\"finishedCount\"}>完成了{this.dailyFinishedTodos[date].length}个任务</p>\r\n          </div>\r\n          <div className={\"todoList\"}>\r\n            {\r\n              this.dailyFinishedTodos[date].map(todo => <TodoHistoryItem key={todo.id} {...todo}\r\n                                                                         itemType={\"finished\"}/>)\r\n            }\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    const deletedTodoList = this.deletedTodos.map(todo => <TodoHistoryItem key={todo.id} {...todo}\r\n                                                                           itemType={\"deleted\"}/>)\r\n    return (\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"已完成任务\" key=\"1\">\r\n          <div className={\"TodoHistory\"} id={\"TodoHistory\"}>\r\n            {finishedTodoList}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"已删除任务\" key=\"2\">\r\n          <div className={\"TodoHistory\"} id={\"TodoHistory\"}>\r\n            {deletedTodoList}\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    todos: state.todos,\r\n    ...ownProps\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(TodoHistory)\r\n","import { format } from \"date-fns\"\r\nimport _ from \"lodash\"\r\nimport React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport Polygon from \"./Polygon\"\r\nimport \"./Statistics.scss\"\r\nimport TodoHistory from \"./TodoHistory\"\r\n\r\ninterface IStatisticsProps {\r\n  todos: ITodo[]\r\n}\r\n\r\nclass Statistics extends Component<IStatisticsProps> {\r\n  \r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted)\r\n  }\r\n  \r\n  get dailyTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => format(Date.parse(todo.updated_at), \"yyyy-MM-dd\"))\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className={\"Statistics\"} id={\"Statistics\"}>\r\n        <ul>\r\n          {/*<li>统计</li>*/}\r\n          {/*<li>目标</li>*/}\r\n          {/*<li>番茄历史</li>*/}\r\n          <li>\r\n            累计完成<h1 style={{ color: \"#1890ff\" }}>{this.finishedTodos.length}</h1>个任务\r\n            <Polygon data={this.dailyTodos} totalFinishedCount={this.finishedTodos.length}/>\r\n          </li>\r\n        </ul>\r\n        <TodoHistory/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    todos: state.todos,\r\n    ...ownProps\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(Statistics)\r\n","import { Input } from \"antd\"\nimport axios from \"config/axios\"\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { addTodo } from \"redux/actions/todoActions\"\n\nclass TodoInput extends Component<ITodoInputProps, ITodoInputState> {\n\tconstructor(props: ITodoInputProps) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tdescription: \"\"\n\t\t}\n\t}\n\n\tonChange = (value: string) => {\n    this.setState({description: value})\n  }\n  \n  postTodo = async () => {\n    try {\n      let response = await axios.post(\"todos\", {description: this.state.description})\n      this.props.addTodo(response.data.resource)\n    } catch (e) {\n      throw new Error(e)\n    }\n  }\n  \n  render() {\n    const {description} = this.state\n    return (\n      <div className={\"TodoInput\"} id={\"TodoInput\"}>\n        <Input\n          placeholder=\"今天要干什么\"\n          value={description}\n          allowClear\n          onChange={(e) => {this.onChange(e.target.value)}}\n          onKeyUp={e => {this.handleKeyUp(e)}}\n        />\n      </div>\n    )\n  }\n  \n  private handleKeyUp(e: React.KeyboardEvent<HTMLInputElement> | { [p: string]: any }) {\n    if (e.key === \"Enter\" && this.state.description !== \"\") {\n      this.postTodo().then(() => {this.setState({description: \"\"})})\n    }\n  }\n}\n\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  return {\n    todos: state.todos,\n    ...ownProps\n  }\n}\nconst mapDispatchToProps = {\n  addTodo\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput)\n\n","import React, {Component} from \"react\"\nimport {Checkbox, Icon} from \"antd\"\nimport classNames from \"classnames\"\nimport \"./TodoItem.scss\"\n\nclass TodoItem extends Component<ITodoExtend, ITodoItemState> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      editText: this.props.description\n    }\n  }\n  \n  \n  render() {\n    const Editing = (\n      <div className={\"editing\"}>\n        <input type={\"text\"} value={this.state.editText}\n               onChange={(e) => {this.handleEditTextChange(e.target.value)}}\n               onKeyUp={(e) => {this.handelKeyUp(e)}}\n               autoFocus={true}\n        />\n        <div className=\"iconWrapper\">\n          <Icon\n            type={\"enter\"}\n            onClick={() => {this.submit()}}\n            className={\"enter\"}\n          />\n          <Icon\n            type={\"delete\"}\n            onClick={() => {this.props.update(this.props.id, {deleted: true})}}\n          />\n        </div>\n      </div>\n    )\n    const Text = (<span className={\"Text\"}\n    >{this.props.description}</span>)\n    const todoItemClass = classNames({\n      TodoItem: true,\n      editing: this.props.editable,\n      completed: this.props.completed\n    })\n    return (\n      <div className={todoItemClass} id={\"TodoItem\"} onDoubleClick={() => {this.props.editTodo(this.props.id)}}>\n        <Checkbox\n          checked={this.props.completed}\n          onChange={(e) => {this.props.update(this.props.id, {completed: e.target.checked})}}\n        />\n        {\n          this.props.editable ? Editing : Text\n        }\n      </div>\n    )\n  }\n  \n  private handelKeyUp(e: React.KeyboardEvent) {\n    if (e.key === \"Enter\" && this.state.editText !== \"\") {\n      this.props.update(this.props.id, {description: this.state.editText})\n    }\n  }\n  \n  \n  private submit() {\n    if (this.state.editText !== \"\") {\n      this.props.update(this.props.id, {description: this.state.editText})\n    }\n  }\n  \n  private handleEditTextChange = (val: string) => {\n    this.setState({editText: val})\n  }\n}\n\nexport default TodoItem\n","import { Icon, Tree } from \"antd\"\nimport axios from \"config/axios\"\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { editTodo, updateTodo } from \"redux/actions/todoActions\"\nimport TodoInput from \"./TodoInput\"\nimport TodoItem from \"./TodoItem\"\nimport \"./Todos.scss\"\n\nconst { TreeNode } = Tree;\n\nclass Todos extends Component<any> {\n\n\tget unCompletedTodos() {\n\t\treturn this.unDeletedTodos.filter((t: ITodo) => !t.completed)\n\t}\n\n\tget unDeletedTodos() {\n\t\treturn this.props.todos.filter((t: ITodo) => !t.deleted)\n\t}\n\n\tget completedTodos() {\n\t\treturn this.unDeletedTodos.filter((t: ITodo) => t.completed)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className={\"Todos\"} id={\"Todos\"}>\n\t\t\t\t<TodoInput/>\n\t\t\t\t<div className={\"todoList\"}>\n\t\t\t\t\t{this.unCompletedTodos.map((todo: ITodo) => <TodoItem key={todo.id} {...todo} update={this.postTodo}\n\t\t\t\t\t                                                      editTodo={this.isTodoEditable}/>)}\n\t\t\t\t\t<Tree\n\t\t\t\t\t\tshowLine\n\t\t\t\t\t\tswitcherIcon={<Icon type=\"down\"/>}\n\t\t\t\t\t>\n\t\t\t\t\t\t<TreeNode title=\"显示最近完成\" key=\"0-0-0-2\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.completedTodos.map((todo: ITodo) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<TreeNode key={`tree-${todo.id}`} title={\n\t\t\t\t\t\t\t\t\t\t\t<TodoItem\n\t\t\t\t\t\t\t\t\t\t\t\tkey={todo.id}\n\t\t\t\t\t\t\t\t\t\t\t\t{...todo}\n\t\t\t\t\t\t\t\t\t\t\t\tupdate={this.postTodo}\n\t\t\t\t\t\t\t\t\t\t\t\teditTodo={this.isTodoEditable}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}/>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</TreeNode>\n\t\t\t\t\t</Tree>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tisTodoEditable = (id: number) => {\n\t\tthis.props.editTodo(id)\n\t}\n\n\tpostTodo = async (id: number, params: any) => {\n\t\tif (params.completed) {\n\t\t\tparams.completed_at = new Date()\n\t\t}\n\t\ttry {\n\t\t\tconst response = await axios.put(`todos/${id}`, params)\n\t\t\tthis.props.updateTodo(response.data.resource)\n\t\t} catch (e) {\n\t\t\tthrow new Error(e)\n\t\t}\n\t}\n}\n\ninterface IMSTPTodos {\n\ttodos: Array<ITodoExtend>\n\n\t[propName: string]: any\n}\n\nconst mapStateToProps: (state: ITodosState, ownProps: any) => IMSTPTodos = (state, ownProps) => {\n\treturn {\n\t\ttodos: state.todos,\n\t\t...ownProps\n\t}\n}\nconst mapDispatchToProps = {\n\teditTodo,\n\tupdateTodo\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos)\n","const ACCOUNT = \"account\"\r\nconst PASSWORD = \"password\"\r\nconst CONFIRM = \"password_confirmation\"\r\nconst TITLE = \"番茄工作法 - Pomodoro Timer\"\r\nexport {ACCOUNT, PASSWORD, CONFIRM, TITLE}\r\n","import {Button, Icon, Input, Modal} from \"antd\"\r\nimport axios from \"config/axios\"\r\nimport {TITLE} from \"constants/Sign\"\r\nimport React, {Component} from \"react\"\r\nimport CountDown from \"./CountDownHook\"\r\nimport \"./TomatoAction.scss\"\r\n\r\nconst {confirm} = Modal\r\n\r\nclass TomatoAction extends Component<ITomatoActionProps, ITomatoActionState> {\r\n  constructor(props: ITomatoActionProps) {\r\n    super(props)\r\n    this.state = {\r\n      description: \"\"\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    let showcase = <div/>\r\n    if (this.props.unfinishedTomato === undefined) {\r\n      showcase = <Button type={\"primary\"} block\r\n                         onClick={() => {this.props.startTomato()}}>开始番茄</Button>\r\n    } else {\r\n      const started_at = Date.parse(this.props.unfinishedTomato?.started_at)\r\n      const duration = this.props.unfinishedTomato?.duration\r\n      const now = new Date().getTime()\r\n      if (now - started_at > duration) {\r\n        showcase = <div className={\"inputWrapper\"}>\r\n          <Input\r\n            placeholder={\"请输入你刚才完成的任务\"}\r\n            value={this.state.description}\r\n            onChange={e => {this.setState({description: e.target.value})}}\r\n            onKeyUp={e => {this.handleKeyUp(e.key)}}\r\n          />\r\n          <Icon type={\"close-circle\"} className={\"abort\"} onClick={() => {this.abortTomato()}}/>\r\n        </div>\r\n      } else if (now - started_at < duration) {\r\n        const timer = duration - now + started_at\r\n        showcase = (\r\n          <div className={\"countDownWrapper\"}>\r\n            <CountDown timer={timer} onFinish={this.onFinish} duration={duration}/>\r\n            <Icon type={\"close-circle\"} className={\"abort\"} onClick={this.showConfirm}/>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className={\"TomatoAction\"} id={\"TomatoAction\"}>\r\n        {showcase}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  onFinish = () => {\r\n    this.forceUpdate()\r\n  }\r\n  \r\n  abortTomato = () => {\r\n    this.updateTomato({aborted: true}).then(() => {document.title = TITLE})\r\n  }\r\n  \r\n  updateTomato = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.unfinishedTomato?.id}`, params)\r\n      this.props.updateTomato(response.data.resource)\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n  \r\n  private handleKeyUp = async (key: string) => {\r\n    if (key === \"Enter\" && this.state.description !== \"\") {\r\n      await this.updateTomato({description: this.state.description, ended_at: new Date()})\r\n      await this.setState({description: \"\"})\r\n    }\r\n  }\r\n  \r\n  private showConfirm = () => {\r\n    confirm({\r\n      title: \"确认丢弃这个番茄?\",\r\n      onOk: () => {\r\n        this.abortTomato()\r\n      },\r\n      onCancel() {},\r\n      cancelText: \"取消\",\r\n      okText: \"确定\"\r\n    })\r\n  }\r\n}\r\n\r\nexport default TomatoAction\r\n","import { Icon, Spin } from \"antd\"\r\nimport { format } from \"date-fns\"\r\nimport React, { Component } from \"react\"\r\nimport \"./TomatoList.scss\"\r\n\r\ninterface ITomatoListProps {\r\n  finishedTomatoes: any\r\n}\r\n\r\ninterface ITomatoListState {\r\n  spinning: boolean\r\n}\r\n\r\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin/>;\r\n\r\nconst TomatoItem = function (props: ITomato) {\r\n  return (\r\n    <div className={\"TomatoItem\"}>\r\n      <span\r\n        className={\"timeRange\"}>\r\n        {format(Date.parse(props.started_at), \"H:mm\")} - {format(Date.parse(props.ended_at), \"H:mm\")}\r\n      </span>\r\n      <span className={\"description\"}>{props.description}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass TomatoList extends Component<ITomatoListProps, ITomatoListState> {\r\n  constructor(props: ITomatoListProps) {\r\n    super(props);\r\n    this.state = {\r\n      spinning: true\r\n    }\r\n  }\r\n\r\n  get dates() {\r\n    let dates = Object.keys(this.props.finishedTomatoes)\r\n    return dates.sort((a, b) => Date.parse(b) - Date.parse(a)).splice(0, 3)\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.setState({ spinning: false })\r\n  }\r\n\r\n  render() {\r\n    const list = this.dates.map(d => {\r\n      const tomatoes = this.props.finishedTomatoes[d]\r\n      return (\r\n        <div key={d} className={\"dailyTomatoes\"}>\r\n          <div className=\"title\">\r\n            <span className={\"dateTime\"}>{format(Date.parse(d), \"M月dd日\")}</span>\r\n            <span className={\"finishCount\"}>完成了{tomatoes.length}个番茄</span>\r\n          </div>\r\n          {\r\n            tomatoes.map((t: JSX.IntrinsicAttributes & ITomato) => <TomatoItem key={t.id} {...t}/>)\r\n          }\r\n        </div>\r\n      )\r\n    })\r\n    return (\r\n      <div className={\"TomatoList\"} id={\"TomatoList\"}>\r\n        <Spin indicator={antIcon} spinning={this.state.spinning}/>\r\n        {list}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TomatoList\r\n","import { format } from \"date-fns\"\r\nimport _ from \"lodash\"\r\nimport React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { addTomato, updateTomato } from \"redux/actions/tomatoActions\"\r\nimport axios from \"../../config/axios\"\r\nimport TomatoAction from \"./TomatoAction\"\r\nimport \"./Tomatoes.scss\"\r\nimport TomatoList from \"./TomatoList\"\r\n\r\n\r\nclass Tomatoes extends Component<ITomatoesProps> {\r\n\r\n  get unfinishedTomato() {\r\n    return this.props.tomatoes.filter(t => !t.description && !t.ended_at && !t.aborted)[0]\r\n  }\r\n\r\n  get finishedTomatoes() {\r\n    const finishedTomatoes = this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted)\r\n    return _.groupBy(finishedTomatoes, (tomato) => format(Date.parse(tomato.started_at), \"yyyy-MM-dd\"))\r\n  }\r\n\r\n  public componentDidMount(): void {\r\n    this.setState({ spinning: false })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={\"Tomatoes\"} id={\"Tomatoes\"}>\r\n        <TomatoAction\r\n          startTomato={() => {this.startTomato(this.props.timer)}}\r\n          updateTomato={this.props.updateTomato}\r\n          unfinishedTomato={this.unfinishedTomato}\r\n        />\r\n        <TomatoList finishedTomatoes={this.finishedTomatoes}/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  private startTomato = async (timer: number) => {\r\n    try {\r\n      const response = await axios.post(\"tomatoes\", { duration: timer * 60 * 1000 })\r\n      this.props.addTomato(response.data.resource)\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, props: any) => ({ tomatoes: state.tomatoes, ...props })\r\nconst mapDispatchToProps = {\r\n  addTomato,\r\n  updateTomato\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes)\r\n","import { ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO } from \"../actionTypes\"\r\n\r\nexport const addTomato = (payload: any) => ({ type: ADD_TOMATO, payload })\r\n\r\nexport const initTomatoes = (payload: any[]) => ({ type: INIT_TOMATOES, payload })\r\nexport const updateTomato = (payload: any) => ({ type: UPDATE_TOMATO, payload })\r\n","import { Dropdown, Icon, InputNumber, Menu, Modal, notification } from \"antd\"\r\nimport axios from \"config/axios\"\r\nimport React, { Component } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { initTodos } from \"redux/actions/todoActions\"\r\nimport { initTomatoes } from \"redux/actions/tomatoActions\"\r\nimport Statistics from \"../Statistics/Statistics\"\r\nimport Todos from \"../Todos/Todos\"\r\nimport Tomatoes from \"../Tomatoes/Tomatoes\"\r\nimport \"./Home.scss\"\r\n\r\ninterface IIndexState {\r\n\tuser: any,\r\n\tvisible: boolean,\r\n\ttimer: number | undefined\r\n}\r\n\r\n\r\nconst Tomato = Icon.createFromIconfontCN({\r\n\tscriptUrl: \"//at.alicdn.com/t/font_808628_b6nuh19mmf5.js\",\r\n})\r\n\r\nconst openNotification = () => {\r\n\tnotification.open({\r\n\t\tmessage: '使用小提示',\r\n\t\tdescription:\r\n\t\t\t'按下回车键即可添加新的todo噢',\r\n\t\tonClick: () => {\r\n\t\t\tconsole.log('Notification Clicked!');\r\n\t\t},\r\n\t});\r\n};\r\n\r\nconst openNotification1 = () => {\r\n\tnotification.open({\r\n\t\tmessage: '使用小提示',\r\n\t\tdescription:\r\n\t\t\t'番茄时间结束后输入你刚才完成的事情',\r\n\t\tonClick: () => {\r\n\t\t\tconsole.log('Notification Clicked!');\r\n\t\t},\r\n\t});\r\n}\r\n\r\nconst openNotification2 = () => {\r\n\tnotification.open({\r\n\t\tmessage: '使用小提示',\r\n\t\tdescription:\r\n\t\t\t'双击todo列表可以编辑噢~',\r\n\t\tonClick: () => {\r\n\t\t\tconsole.log('Notification Clicked!');\r\n\t\t},\r\n\t});\r\n}\r\n\r\nclass Home extends Component<any, IIndexState> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tuser: {},\r\n\t\t\tvisible: false,\r\n\t\t\ttimer: 25\r\n\t\t}\r\n\t}\r\n\r\n\tlogout = () => {\r\n\t\tlocalStorage.setItem(\"x-token\", \"\")\r\n\t\tthis.props.history.push(\"/login\")\r\n\t}\r\n\r\n\tpublic componentDidMount(): void {\r\n\t\tlet count = Number(localStorage.getItem(\"count\"))\r\n\t\tif (count === 1) {\r\n\t\t\topenNotification()\r\n\t\t\topenNotification1()\r\n\t\t\topenNotification2()\r\n\t\t}\r\n\t}\r\n\r\n\tasync UNSAFE_componentWillMount() {\r\n\t\tawait this.getMe()\r\n\t\tawait this.getTodos()\r\n\t\tawait this.getTomatoes()\r\n\t}\r\n\r\n\tgetMe = async () => {\r\n\t\tconst response = await axios.get(\"me\")\r\n\t\tthis.setState({ ...this.state, user: response.data })\r\n\t}\r\n\tgetTodos = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get(\"todos\")\r\n\t\t\tconst todos = response.data.resources.map((t: any) => Object.assign({}, t, { editable: false }))\r\n\t\t\tthis.props.initTodos(todos)\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error(e)\r\n\t\t}\r\n\t}\r\n\tgetTomatoes = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get(\"tomatoes\")\r\n\t\t\tthis.props.initTomatoes(response.data.resources)\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error()\r\n\t\t}\r\n\t}\r\n\r\n\thandleOk = () => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tvisible: false,\r\n\t\t});\r\n\t}\r\n\r\n\thandleCancel = () => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tvisible: false,\r\n\t\t});\r\n\t}\r\n\tshowModal = () => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\tvisible: true,\r\n\t\t});\r\n\t}\r\n\tonInputValChange = (val: number | undefined) => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state,\r\n\t\t\ttimer: val\r\n\t\t})\r\n\t}\r\n\r\n\trender(): React.ReactNode {\r\n\t\tconst menu = (\r\n\t\t\t<Menu style={{ textAlign: \"right\" }}>\r\n\t\t\t\t<Menu.Item>\r\n          <span onClick={() => {this.showModal()}}>\r\n            偏好设置&nbsp;<Icon type={\"setting\"}/>\r\n          </span>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t\t<Menu.Item>\r\n          <span onClick={(e) => {\r\n\t          e.preventDefault()\r\n\t          this.logout()\r\n          }}>退出登录&nbsp;<Icon type={\"logout\"}/></span>\r\n\t\t\t\t</Menu.Item>\r\n\t\t\t</Menu>\r\n\t\t)\r\n\t\treturn (\r\n\t\t\t<div className={\"Home\"} id={\"Home\"}>\r\n\t\t\t\t<Modal\r\n\t\t\t\t\ttitle=\"设置一个番茄的时间\"\r\n\t\t\t\t\tvisible={this.state.visible}\r\n\t\t\t\t\tonOk={() => {this.handleOk()}}\r\n\t\t\t\t\tonCancel={() => {this.handleCancel()}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<InputNumber min={1} max={100} defaultValue={25} onChange={(e) => {this.onInputValChange(e)}}/> min\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<header>\r\n          <span className=\"logo\">\r\n            <Tomato type={\"i-Tomato\"} className={\"icon\"} style={{ fontSize: 32 }}/>\r\n            Pomodoro Timer\r\n          </span>\r\n\t\t\t\t\t<Dropdown overlay={menu}>\r\n            <span\r\n\t            className=\"ant-dropdown-link\"\r\n\t            onClick={e => e.preventDefault()}\r\n\t            style={{ color: \"#1890ff\", cursor: \"pointer\", fontSize: \"1rem\" }}\r\n            >\r\n              你好, {this.state.user?.account} <Icon type=\"down\"/>\r\n            </span>\r\n\t\t\t\t\t</Dropdown>\r\n\t\t\t\t</header>\r\n\t\t\t\t<main>\r\n\t\t\t\t\t<Tomatoes timer={this.state.timer}/>\r\n\t\t\t\t\t<Todos/>\r\n\t\t\t\t</main>\r\n\t\t\t\t<footer>\r\n\t\t\t\t\t<Statistics/>\r\n\t\t\t\t</footer>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n\treturn {\r\n\t\t...ownProps\r\n\t}\r\n}\r\nconst mapDispatchToProps = {\r\n\tinitTodos,\r\n\tinitTomatoes\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","import { Button, Icon, Input } from \"antd\"\r\nimport { ACCOUNT, PASSWORD } from \"constants/Sign\"\r\nimport React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport axios from \"../../config/axios\"\r\nimport \"./Login.scss\"\r\n\r\ninterface ILogin {\r\n\taccount: string\r\n\tpassword: string\r\n}\r\n\r\n\r\nexport default class Login extends Component<any, ILogin> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\taccount: \"\",\r\n\t\t\tpassword: \"\",\r\n\t\t}\r\n\t}\r\n\r\n\trender(): React.ReactNode {\r\n\t\tconst { account, password } = this.state\r\n\t\treturn (\r\n\t\t\t<div className={\"Login\"} id={\"Login\"}>\r\n\t\t\t\t<h1>Pomodoro 登录</h1>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tplaceholder={\"输入用户名\"}\r\n\t\t\t\t\tprefix={<Icon\r\n\t\t\t\t\t\ttype={\"user\"}\r\n\t\t\t\t\t\tstyle={{ color: \"rgba(0,0,0.25)\" }}\r\n\t\t\t\t\t/>}\r\n\t\t\t\t\tvalue={account}\r\n\t\t\t\t\tonChange={(e) => { this.onChange(\"account\", e.target.value)}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Input.Password\r\n\t\t\t\t\tplaceholder=\"输入密码\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={(e) => { this.onChange(\"password\", e.target.value)}}\r\n\t\t\t\t\tonKeyDown={(e) => {this.handleKeyDown(e.key)}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={this.submit}\r\n\t\t\t\t\tclassName={\"loginButton\"}\r\n\t\t\t\t\ttype={\"primary\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t登录\r\n\t\t\t\t</Button>\r\n\t\t\t\t<p>没有账号? <Link to={\"/signup\"}>注册</Link>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tprivate onChange: (name: \"account\" | \"password\", value: string) => void = (name, value) => {\r\n\t\tconst newState: any = {}\r\n\t\tnewState[name] = value\r\n\t\tthis.setState(newState)\r\n\t}\r\n\r\n\tprivate submit: () => void = async () => {\r\n\t\tconst { account, password } = this.state\r\n\r\n\t\ttry {\r\n\t\t\tawait axios.post(\"sign_in/user\", {\r\n\t\t\t\t[ACCOUNT]: account, [PASSWORD]: password\r\n\t\t\t})\r\n\t\t\tawait console.log(\"登录成功\")\r\n\t\t\tawait this.props.history.push(\"/\")\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error(e)\r\n\t\t}\r\n\t}\r\n\r\n\tprivate handleKeyDown(value: string) {\r\n\t\tif (value === \"Enter\") {\r\n\t\t\tthis.submit()\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","import { Button, Icon, Input } from \"antd\"\r\nimport axios from \"config/axios\"\r\nimport { ACCOUNT, CONFIRM, PASSWORD } from \"constants/Sign\"\r\nimport React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./SignUp.scss\"\r\n\r\ninterface ISignUp {\r\n\taccount: string\r\n\tpassword: string\r\n\tpasswordConfirmed: string\r\n}\r\n\r\nexport default class SignUp extends Component<any, ISignUp> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\taccount: \"\",\r\n\t\t\tpassword: \"\",\r\n\t\t\tpasswordConfirmed: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\trender(): React.ReactNode {\r\n\t\tconst { account, password, passwordConfirmed } = this.state\r\n\t\treturn (\r\n\t\t\t<div className={\"SignUp\"} id={\"SignUp\"}>\r\n\t\t\t\t<h1>Pomodoro 注册</h1>\r\n\t\t\t\t<Input\r\n\t\t\t\t\tplaceholder={\"输入用户名\"}\r\n\t\t\t\t\tprefix={<Icon\r\n\t\t\t\t\t\ttype={\"user\"}\r\n\t\t\t\t\t\tstyle={{ color: \"rgba(0,0,0.25)\" }}\r\n\t\t\t\t\t/>}\r\n\t\t\t\t\tvalue={account}\r\n\t\t\t\t\tonChange={(e) => { this.onChange(\"account\", e.target.value)}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Input.Password\r\n\t\t\t\t\tplaceholder=\"输入密码\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={(e) => { this.onChange(\"password\", e.target.value)}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Input.Password\r\n\t\t\t\t\tplaceholder=\"请再次输入密码\"\r\n\t\t\t\t\tvalue={passwordConfirmed}\r\n\t\t\t\t\tonChange={(e) => { this.onChange(\"passwordConfirmed\", e.target.value)}}\r\n\t\t\t\t\tonKeyDown={(e) => {this.handleKeyDown(e.key)}}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={this.submit}\r\n\t\t\t\t\tclassName={\"signUpButton\"}\r\n\t\t\t\t\ttype={\"primary\"}\r\n\t\t\t\t>\r\n\t\t\t\t\t注册\r\n\t\t\t\t</Button>\r\n\t\t\t\t<p>已有账号? <Link to={{ pathname: \"/login\" }}>登录</Link>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tprivate onChange: (name: \"account\" | \"password\" | \"passwordConfirmed\", value: string) => void = (name, value) => {\r\n\t\tthis.setState({ ...this.state, [name]: value })\r\n\t}\r\n\r\n\tprivate submit: () => void = async () => {\r\n\t\tconst { account, password, passwordConfirmed } = this.state\r\n\r\n\t\ttry {\r\n\t\t\tawait axios.post(\"sign_up/user\", {\r\n\t\t\t\t[ACCOUNT]: account, [PASSWORD]: password, [CONFIRM]: passwordConfirmed\r\n\t\t\t})\r\n\t\t\tconsole.log(\"成功\")\r\n\t\t\tthis.props.history.push(\"/\")\r\n\t\t} catch (e) {\r\n\t\t\tthrow new Error(e)\r\n\t\t}\r\n\t}\r\n\r\n\tprivate handleKeyDown(value: string) {\r\n\t\tif (value === \"Enter\") {\r\n\t\t\tthis.submit()\r\n\t\t}\r\n\t}\r\n}\r\n\r\n","import { BackTop } from \"antd\"\nimport React from \"react\"\nimport { Route, Router } from \"react-router-dom\"\nimport Home from \"./components/Home/Home\"\nimport Login from \"./components/Login/Login\"\nimport SignUp from \"./components/SignUp/SignUp\"\nimport history from \"./config/history\"\nimport \"./index.css\"\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <BackTop/>\n      <Route exact={true} path={\"/\"} component={Home}/>\n      <Route path={\"/login\"} component={Login}/>\n      <Route path={\"/signup\"} component={SignUp}/>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\"\r\nimport todos from \"./todos\"\r\nimport tomatoes from \"./tomatoes\"\r\n\r\nexport default combineReducers({todos, tomatoes})\r\n","import {ADD_TODO, EDIT_TODO, INIT_TODOS, UPDATE_TODO} from \"../actionTypes\"\n\nexport default function (state: Array<ITodoExtend> = [], action: any) {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, action.payload]\n    case INIT_TODOS:\n      return [...action.payload]\n    case EDIT_TODO:\n      return state.map(t => {\n        if (t.id === action.payload) {\n          return Object.assign({}, t, {editable: !t.editable})\n        } else {\n          return Object.assign({}, t, {editable: false})\n        }\n      })\n    case UPDATE_TODO:\n      return state.map(t => t.id === action.payload.id ? action.payload : t)\n    default:\n      return state\n  }\n}\n","import { ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO } from \"../actionTypes\"\r\n\r\nexport default (state: any = [], action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase ADD_TOMATO:\r\n\t\t\treturn [action.payload, ...state]\r\n\t\tcase INIT_TOMATOES:\r\n\t\t\treturn [...action.payload]\r\n\t\tcase UPDATE_TOMATO:\r\n\t\t\treturn state.map((t: any) => t.id === action.payload.id ? action.payload : t)\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import {createStore} from \"redux\"\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"antd/dist/antd.css\"\nimport \"./index.css\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport {Provider} from \"react-redux\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}><App/></Provider>, document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}