{"version":3,"sources":["config/history.ts","config/axios.ts","components/Tomatoes/CountDownHook.tsx","redux/actions/todoActions.ts","redux/actionTypes.ts","components/Statistics/Polygon.tsx","components/Statistics/TodoHistoryItem.tsx","components/Statistics/TodoHistory.tsx","components/Statistics/Statistics.tsx","constants/Sign.ts","components/Tomatoes/TomatoAction.tsx","components/Tomatoes/TomatoList.tsx","components/Tomatoes/Tomatoes.tsx","redux/actions/tomatoActions.ts","components/Todos/TodoInput.tsx","components/Todos/TodoItem.tsx","components/Todos/Todos.tsx","components/Home/Home.tsx","components/Login/Login.tsx","components/SignUp/SignUp.tsx","App.tsx","serviceWorker.ts","redux/reducers/index.ts","redux/reducers/todos.ts","redux/reducers/tomatoes.ts","redux/store.ts","index.tsx"],"names":["history","createBrowserHistory","instance","axios","create","baseURL","headers","interceptors","request","use","config","xToken","localStorage","getItem","error","console","Promise","reject","response","setItem","status","log","push","timerId","updateTodo","payload","type","Polygon","points","dates","Object","keys","props","data","sort","a","b","Date","parse","firstDay","range","getTime","finishedCount","finishedY","pointsArr","map","date","x","y","length","totalFinishedCount","join","className","id","fill","stroke","strokeWidth","this","Component","TodoHistoryItem","params","put","resource","Error","action","timeFormat","time","updated_at","itemType","onClick","completed","deleted","created_at","format","description","mapDispatchToProps","connect","TabPane","Tabs","TodoHistory","finishedTodoList","finishedDates","key","dailyFinishedTodos","todo","deletedTodoList","deletedTodos","defaultActiveKey","tab","todos","filter","t","_","groupBy","finishedTodos","state","ownProps","Statistics","dailyTodos","TITLE","CountDownHook","useState","timer","countDown","setCountDown","min","Math","floor","sec","useEffect","document","title","window","setInterval","onFinish","clearInterval","percent","duration","style","width","confirm","Modal","TomatoAction","forceUpdate","abortTomato","updateTomato","aborted","then","unfinishedTomato","handleKeyUp","ended_at","setState","showConfirm","onOk","onCancel","cancelText","okText","showcase","undefined","block","startTomato","started_at","now","placeholder","value","onChange","e","target","onKeyUp","TomatoItem","TomatoList","list","d","tomatoes","finishedTomatoes","splice","Tomatoes","post","addTomato","tomato","TodoInput","postTodo","addTodo","allowClear","TodoItem","handleEditTextChange","val","editText","Editing","handelKeyUp","autoFocus","submit","update","Text","todoItemClass","classNames","editing","editable","onDoubleClick","editTodo","checked","Todos","isTodoEditable","completed_at","unCompletedTodos","completedTodos","unDeletedTodos","Tomato","Icon","createFromIconfontCN","scriptUrl","Home","logout","getMe","get","user","getTodos","resources","assign","initTodos","getTomatoes","initTomatoes","menu","textAlign","Item","preventDefault","overlay","color","cursor","fontSize","account","Login","name","newState","password","prefix","Password","onKeyDown","handleKeyDown","to","SignUp","passwordConfirmed","App","exact","path","component","Boolean","location","hostname","match","combineReducers","store","createStore","rootReducer","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.71922cc2.chunk.js","sourcesContent":["import {createBrowserHistory} from \"history\"\r\nconst history = createBrowserHistory()\r\n\r\nexport default history\r\n","import axios, {AxiosRequestConfig} from \"axios\"\r\nimport history from \"./history\"\r\nconst appID = \"HEtRxRQ3APDWy3eHKYme5KjY\"\r\nconst appSecret = \"aJsNpHpJ26HyfhmuPCeWR1ip\"\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://gp-server.hunger-valley.com/\",\r\n  headers: {\r\n    \"t-app-id\": appID,\r\n    \"t-app-secret\": appSecret\r\n  }\r\n})\r\n\r\n// Add a request interceptor\r\ninstance.interceptors.request.use(function (config: AxiosRequestConfig) {\r\n  const xToken = localStorage.getItem(\"x-token\")\r\n  if (xToken) {\r\n    config.headers[\"Authorization\"] = `Bearer ${xToken}`\r\n  }\r\n  return config\r\n}, function (error) {\r\n  console.error(error)\r\n  return Promise.reject(error)\r\n})\r\n\r\n// Add a response interceptor\r\ninstance.interceptors.response.use(function (response) {\r\n  // Do something with response data\r\n  if (response.headers[\"x-token\"]) {\r\n    localStorage.setItem(\"x-token\", response.headers[\"x-token\"])\r\n  }\r\n  return response\r\n}, function (error) {\r\n  if (error.response?.status === 401) {\r\n    console.log('重定向')\r\n    history.push('/login')\r\n  }\r\n  // Do something with response error\r\n  return Promise.reject(error)\r\n})\r\n\r\nexport default instance\r\n","import React, {FC, useEffect, useState} from \"react\"\r\nimport \"./CountDown.scss\"\r\nimport {TITLE} from \"../../constants/Sign\"\r\n\r\nlet timerId: number\r\nconst CountDownHook: FC<ICountDownProps> = (props) => {\r\n  const [countDown, setCountDown] = useState(props.timer)\r\n  const min = Math.floor(countDown / 1000 / 60)\r\n  const sec = Math.floor(countDown / 1000 % 60)\r\n  const time = `${min < 10 ? `0${min}` : min} : ${sec < 10 ? `0${sec}` : sec}`\r\n  useEffect(() => {\r\n    document.title = `${time} - Pomodoro Timer`\r\n    timerId = window.setInterval(() => {\r\n      setCountDown(countDown - 1000)\r\n    }, 1000)\r\n    if (countDown < 0) {\r\n      props.onFinish()\r\n      clearInterval(timerId)\r\n      document.title = TITLE\r\n    }\r\n    \r\n    return () => {\r\n      window.clearInterval(timerId)\r\n    }\r\n  })\r\n  const percent = 1 - countDown / props.duration\r\n  return (\r\n    <div className={\"CountDown\"} id={\"CountDown\"}>\r\n      <span className={\"restTime\"}>{min >= 0 || sec >= 0 ? time : `00 : 00`}</span>\r\n      <div className=\"progress\" style={{width: `${percent * 100}%`}}/>\r\n    </div>\r\n  )\r\n}\r\nexport default CountDownHook\r\n","import {ADD_TODO, EDIT_TODO, INIT_TODOS, UPDATE_TODO} from \"../actionTypes\"\n\nexport const addTodo = (payload: ITodo) => ({type: ADD_TODO, payload})\n\nexport const initTodos = (payload: ITodo[]) => ({type: INIT_TODOS, payload})\n\nexport const editTodo = (payload: number) => ({type: EDIT_TODO, payload})\n\nexport const updateTodo = (payload: ITodo) => ({type: UPDATE_TODO, payload})\n","export const ADD_TODO = \"ADD_TODO\"\nexport const INIT_TODOS = \"INIT_TODOS\"\nexport const EDIT_TODO = \"EDIT_TODO\"\nexport const UPDATE_TODO = \"UPDATE_TODO\"\nexport const ADD_TOMATO = \"ADD_TOMATO\"\nexport const INIT_TOMATOES = \"INIT_TOMATOES\"\nexport const UPDATE_TOMATO = \"UPDATE_TOMATO\"\n","import React, {Component} from \"react\"\r\n\r\ninterface IPolygonProps {\r\n  data: any\r\n  totalFinishedCount: number\r\n}\r\n\r\n\r\nclass Polygon extends Component<IPolygonProps> {\r\n  \r\n  points = () => {\r\n    const dates = Object.keys(this.props.data).sort((a, b) => Date.parse(a) - Date.parse(b))\r\n    const firstDay = dates[0]\r\n    if (firstDay) {\r\n      const range = new Date().getTime() - Date.parse(firstDay)\r\n      let finishedCount = 0\r\n      let finishedY = null\r\n      const pointsArr = dates.map(date => {\r\n        const x = (Date.parse(date) - Date.parse(firstDay)) / range * 240\r\n        finishedCount += this.props.data[date].length\r\n        const y = (1 - (finishedCount / this.props.totalFinishedCount)) * 60\r\n        finishedY = y\r\n        return `${x}, ${y}`\r\n      })\r\n      return [\"0,60\", ...pointsArr, `240,${finishedY}`, `240, 60`].join(\" \")\r\n    } else {\r\n      return \"0,60 0,60\"\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className={\"Polygon\"} id={\"Polygon\"}>\r\n        <svg>\r\n          <polygon fill=\"rgba(215,78,78,0.1)\" stroke=\"rgba(215,78,78,0.5)\" strokeWidth=\"1\"\r\n                   points={this.points()}/>\r\n        </svg>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Polygon\r\n","import React, {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {format} from \"date-fns\"\r\nimport axios from \"config/axios\"\r\nimport \"./TodoHistoryItem.scss\"\r\nimport {updateTodo} from \"../../redux/actions/todoActions\"\r\n\r\ninterface ITodoHistoryItemProps extends ITodo {\r\n  itemType: \"deleted\" | \"finished\"\r\n  updateTodo: (params: any) => void\r\n}\r\n\r\nclass TodoHistoryItem extends Component<ITodoHistoryItemProps> {\r\n  updateTodo = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`todos/${this.props.id}`, params)\r\n      this.props.updateTodo(response.data.resource)\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    let action\r\n    let timeFormat = \"HH:MM\"\r\n    let time = this.props.updated_at\r\n    if (this.props.itemType === \"finished\") {\r\n      action = (\r\n        <div className={\"action\"}>\r\n          <span onClick={() => {this.updateTodo({completed: false})}}>恢复</span>\r\n          <span onClick={() => {this.updateTodo({deleted: true})}}>删除</span>\r\n        </div>\r\n      )\r\n    } else {\r\n      timeFormat = \"yyyy-MM-dd\"\r\n      time = this.props.created_at\r\n      action = (\r\n        <div className={\"action\"}>\r\n          <span onClick={() => {this.updateTodo({deleted: false})}}>恢复</span>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className={\"todoItem\"}>\r\n        <div className=\"text\">\r\n          <span>{format(Date.parse(time), timeFormat)}</span>\r\n          <span>{this.props.description}</span>\r\n        </div>\r\n        {action}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  updateTodo\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoHistoryItem)\r\n\r\n","import React, {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport _ from \"lodash\"\r\nimport {format} from \"date-fns\"\r\nimport {Tabs} from \"antd\"\r\nimport TodoHistoryItem from \"./TodoHistoryItem\"\r\nimport \"./TodoHistory.scss\"\r\n\r\nconst {TabPane} = Tabs\r\n\r\ninterface ITodoHistoryProps {\r\n  todos: ITodo[]\r\n}\r\n\r\n\r\nclass TodoHistory extends Component<ITodoHistoryProps> {\r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted)\r\n  }\r\n  \r\n  get deletedTodos() {\r\n    return this.props.todos.filter(t => t.deleted)\r\n  }\r\n  \r\n  \r\n  get dailyFinishedTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => format(Date.parse(todo.updated_at), \"yyyy-MM-dd\"))\r\n  }\r\n  \r\n  get dailyDeletedTodos() {\r\n    return _.groupBy(this.deletedTodos, (todo) => format(Date.parse(todo.updated_at), \"yyyy-MM-dd\"))\r\n  }\r\n  \r\n  get finishedDates() {\r\n    return Object.keys(this.dailyFinishedTodos)\r\n  }\r\n  \r\n  render() {\r\n    const finishedTodoList = this.finishedDates.map(date => {\r\n      return (\r\n        <div key={date} className={\"dailyTodos\"}>\r\n          <div className={\"summary\"}>\r\n            <p className=\"date\">\r\n              <span>{date}</span>\r\n              <span>周五</span>\r\n            </p>\r\n            <p className={\"finishedCount\"}>完成了{this.dailyFinishedTodos[date].length}个任务</p>\r\n          </div>\r\n          <div className={\"todoList\"}>\r\n            {\r\n              this.dailyFinishedTodos[date].map(todo => <TodoHistoryItem key={todo.id} {...todo}\r\n                                                                         itemType={\"finished\"}/>)\r\n            }\r\n          </div>\r\n        </div>\r\n      )\r\n    })\r\n  \r\n    const deletedTodoList = this.deletedTodos.map(todo => <TodoHistoryItem key={todo.id} {...todo}\r\n                                                                           itemType={\"deleted\"}/>)\r\n    return (\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab=\"已完成任务\" key=\"1\">\r\n          <div className={\"TodoHistory\"} id={\"TodoHistory\"}>\r\n            {finishedTodoList}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"已删除任务\" key=\"2\">\r\n          <div className={\"TodoHistory\"} id={\"TodoHistory\"}>\r\n            {deletedTodoList}\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    todos: state.todos,\r\n    ...ownProps\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(TodoHistory)\r\n","import React, {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport \"./Statistics.scss\"\r\nimport Polygon from \"./Polygon\"\r\nimport _ from \"lodash\"\r\nimport {format} from \"date-fns\"\r\nimport TodoHistory from \"./TodoHistory\"\r\n\r\ninterface IStatisticsProps {\r\n  todos: ITodo[]\r\n}\r\n\r\nclass Statistics extends Component<IStatisticsProps> {\r\n  \r\n  get finishedTodos() {\r\n    return this.props.todos.filter(t => t.completed && !t.deleted)\r\n  }\r\n  \r\n  get dailyTodos() {\r\n    return _.groupBy(this.finishedTodos, (todo) => format(Date.parse(todo.updated_at), \"yyyy-MM-dd\"))\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className={\"Statistics\"} id={\"Statistics\"}>\r\n        <ul>\r\n          <li>统计</li>\r\n          <li>目标</li>\r\n          <li>番茄历史</li>\r\n          <li>\r\n            任务历史\r\n            累计完成{this.finishedTodos.length}个任务\r\n            <Polygon data={this.dailyTodos} totalFinishedCount={this.finishedTodos.length}/>\r\n          </li>\r\n        </ul>\r\n        <TodoHistory/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    todos: state.todos,\r\n    ...ownProps\r\n  }\r\n}\r\nexport default connect(mapStateToProps, null)(Statistics)\r\n","const ACCOUNT = \"account\"\r\nconst PASSWORD = \"password\"\r\nconst CONFIRM = \"password_confirmation\"\r\nconst TITLE = \"番茄工作法 - Pomodoro Timer\"\r\nexport {ACCOUNT, PASSWORD, CONFIRM, TITLE}\r\n","import React, {Component} from \"react\"\r\nimport {Button, Icon, Input, Modal} from \"antd\"\r\nimport axios from \"config/axios\"\r\nimport CountDown from \"./CountDownHook\"\r\nimport \"./TomatoAction.scss\"\r\nimport {TITLE} from \"../../constants/Sign\"\r\n\r\nconst {confirm} = Modal\r\n\r\nclass TomatoAction extends Component<ITomatoActionProps, ITomatoActionState> {\r\n  constructor(props: ITomatoActionProps) {\r\n    super(props)\r\n    this.state = {\r\n      description: \"\"\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    let showcase = <div/>\r\n    if (this.props.unfinishedTomato === undefined) {\r\n      showcase = <Button type={\"primary\"} block\r\n                         onClick={() => {this.props.startTomato()}}>开始番茄</Button>\r\n    } else {\r\n      const started_at = Date.parse(this.props.unfinishedTomato?.started_at)\r\n      const duration = this.props.unfinishedTomato?.duration\r\n      const now = new Date().getTime()\r\n      if (now - started_at > duration) {\r\n        showcase = <div className={\"inputWrapper\"}>\r\n          <Input\r\n            placeholder={\"请输入你刚才完成的任务\"}\r\n            value={this.state.description}\r\n            onChange={e => {this.setState({description: e.target.value})}}\r\n            onKeyUp={e => {this.handleKeyUp(e.key)}}\r\n          />\r\n          <Icon type={\"close-circle\"} className={\"abort\"}/>\r\n        </div>\r\n      } else if (now - started_at < duration) {\r\n        const timer = duration - now + started_at\r\n        showcase = (\r\n          <div className={\"countDownWrapper\"}>\r\n            <CountDown timer={timer} onFinish={this.onFinish} duration={duration}/>\r\n            <Icon type={\"close-circle\"} className={\"abort\"} onClick={this.showConfirm}/>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n    \r\n    return (\r\n      <div className={\"TomatoAction\"} id={\"TomatoAction\"}>\r\n        {showcase}\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  onFinish = () => {\r\n    this.forceUpdate()\r\n  }\r\n  \r\n  abortTomato = () => {\r\n    this.updateTomato({aborted: true}).then(() => {document.title = TITLE})\r\n  }\r\n  \r\n  updateTomato = async (params: any) => {\r\n    try {\r\n      const response = await axios.put(`tomatoes/${this.props.unfinishedTomato?.id}`, params)\r\n      this.props.updateTomato(response.data.resource)\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n  \r\n  private handleKeyUp = async (key: string) => {\r\n    if (key === \"Enter\" && this.state.description !== \"\") {\r\n      await this.updateTomato({description: this.state.description, ended_at: new Date()})\r\n      await this.setState({description: \"\"})\r\n    }\r\n  }\r\n  \r\n  private showConfirm = () => {\r\n    confirm({\r\n      title: \"确认丢弃这个番茄?\",\r\n      onOk: () => {\r\n        this.abortTomato()\r\n      },\r\n      onCancel() {},\r\n      cancelText: \"取消\",\r\n      okText: \"确定\"\r\n    })\r\n  }\r\n}\r\n\r\nexport default TomatoAction\r\n","import React, {Component} from \"react\"\r\nimport {format} from \"date-fns\"\r\nimport \"./TomatoList.scss\"\r\n\r\ninterface ITomatoListProps {\r\n  finishedTomatoes: any\r\n}\r\n\r\nconst TomatoItem = function (props: ITomato) {\r\n  return (\r\n    <div className={\"TomatoItem\"}>\r\n      <span\r\n        className={\"timeRange\"}>\r\n        {format(Date.parse(props.started_at), \"H:mm\")} - {format(Date.parse(props.ended_at), \"H:mm\")}\r\n      </span>\r\n      <span className={\"description\"}>{props.description}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass TomatoList extends Component<ITomatoListProps> {\r\n  get dates() {\r\n    let dates = Object.keys(this.props.finishedTomatoes)\r\n    return dates.sort((a, b) => Date.parse(a) - Date.parse(b)).splice(0, 3)\r\n  }\r\n  \r\n  render() {\r\n    const list = this.dates.map(d => {\r\n      const tomatoes = this.props.finishedTomatoes[d]\r\n      return (\r\n        <div key={d} className={\"dailyTomatoes\"}>\r\n          <div className=\"title\">\r\n            <span className={\"dateTime\"}>{format(Date.parse(d), \"M月dd日\")}</span>\r\n            <span className={\"finishCount\"}>完成了{tomatoes.length}个番茄</span>\r\n          </div>\r\n          {\r\n            tomatoes.map((t: JSX.IntrinsicAttributes & ITomato) => <TomatoItem key={t.id} {...t}/>)\r\n          }\r\n        </div>\r\n      )\r\n    })\r\n    return (\r\n      <div className={\"TomatoList\"} id={\"TomatoList\"}>{list}</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TomatoList\r\n","import React, {Component} from \"react\"\r\nimport TomatoAction from \"./TomatoAction\"\r\nimport TomatoList from \"./TomatoList\"\r\nimport {connect} from \"react-redux\"\r\nimport _ from \"lodash\"\r\nimport {format} from \"date-fns\"\r\nimport \"./Tomatoes.scss\"\r\nimport {addTomato, updateTomato} from \"../../redux/actions/tomatoActions\"\r\nimport axios from \"../../config/axios\"\r\n\r\n\r\nclass Tomatoes extends Component<ITomatoesProps> {\r\n  get unfinishedTomato() {\r\n    return this.props.tomatoes.filter(t => !t.description && !t.ended_at && !t.aborted)[0]\r\n  }\r\n  \r\n  get finishedTomatoes() {\r\n    const finishedTomatoes = this.props.tomatoes.filter(t => t.description && t.ended_at && !t.aborted)\r\n    return _.groupBy(finishedTomatoes, (tomato) => format(Date.parse(tomato.started_at), \"yyyy-MM-dd\"))\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className={\"Tomatoes\"} id={\"Tomatoes\"}>\r\n        <TomatoAction\r\n          startTomato={this.startTomato}\r\n          updateTomato={this.props.updateTomato}\r\n          unfinishedTomato={this.unfinishedTomato}\r\n        />\r\n        <TomatoList finishedTomatoes={this.finishedTomatoes}/>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  private startTomato = async () => {\r\n    try {\r\n      const response = await axios.post(\"tomatoes\", {duration: 5 * 1000})\r\n      this.props.addTomato(response.data.resource)\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, props: any) => ({tomatoes: state.tomatoes, ...props})\r\nconst mapDispatchToProps = {\r\n  addTomato,\r\n  updateTomato\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tomatoes)\r\n","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from \"../actionTypes\"\r\n\r\nexport const addTomato = (payload: any) => ({type: ADD_TOMATO, payload})\r\n\r\nexport const initTomatoes = (payload: any[]) => ({type: INIT_TOMATOES, payload})\r\nexport const updateTomato = (payload: any) => ({type: UPDATE_TOMATO, payload})\r\n","import React, {Component} from \"react\"\nimport {Input} from \"antd\"\nimport {connect} from \"react-redux\"\nimport {addTodo} from \"../../redux/actions/todoActions\"\nimport axios from \"config/axios\"\n\nclass TodoInput extends Component<ITodoInputProps, ITodoInputState> {\n  constructor(props: ITodoInputProps) {\n    super(props)\n    this.state = {\n      description: \"\"\n    }\n  }\n  \n  onChange = (value: string) => {\n    this.setState({description: value})\n  }\n  \n  postTodo = async () => {\n    try {\n      let response = await axios.post(\"todos\", {description: this.state.description})\n      this.props.addTodo(response.data.resource)\n    } catch (e) {\n      throw new Error(e)\n    }\n  }\n  \n  render() {\n    const {description} = this.state\n    return (\n      <div className={\"TodoInput\"} id={\"TodoInput\"}>\n        <Input\n          placeholder=\"今天要干什么\"\n          value={description}\n          allowClear\n          onChange={(e) => {this.onChange(e.target.value)}}\n          onKeyUp={e => {this.handleKeyUp(e)}}\n        />\n      </div>\n    )\n  }\n  \n  private handleKeyUp(e: React.KeyboardEvent<HTMLInputElement> | { [p: string]: any }) {\n    if (e.key === \"Enter\" && this.state.description !== \"\") {\n      this.postTodo().then(() => {this.setState({description: \"\"})})\n    }\n  }\n}\n\n\nconst mapStateToProps = (state: any, ownProps: any) => {\n  return {\n    todos: state.todos,\n    ...ownProps\n  }\n}\nconst mapDispatchToProps = {\n  addTodo\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoInput)\n\n","import React, {Component} from \"react\"\nimport {Checkbox, Icon} from \"antd\"\nimport classNames from \"classnames\"\nimport \"./TodoItem.scss\"\n\nclass TodoItem extends Component<ITodoExtend, ITodoItemState> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      editText: this.props.description\n    }\n  }\n  \n  \n  render() {\n    const Editing = (\n      <div className={\"editing\"}>\n        <input type={\"text\"} value={this.state.editText}\n               onChange={(e) => {this.handleEditTextChange(e.target.value)}}\n               onKeyUp={(e) => {this.handelKeyUp(e)}}\n               autoFocus={true}\n        />\n        <div className=\"iconWrapper\">\n          <Icon\n            type={\"enter\"}\n            onClick={() => {this.submit()}}\n            className={\"enter\"}\n          />\n          <Icon\n            type={\"delete\"}\n            onClick={() => {this.props.update(this.props.id, {deleted: true})}}\n          />\n        </div>\n      </div>\n    )\n    const Text = (<span className={\"Text\"}\n    >{this.props.description}</span>)\n    const todoItemClass = classNames({\n      TodoItem: true,\n      editing: this.props.editable,\n      completed: this.props.completed\n    })\n    return (\n      <div className={todoItemClass} id={\"TodoItem\"} onDoubleClick={() => {this.props.editTodo(this.props.id)}}>\n        <Checkbox\n          checked={this.props.completed}\n          onChange={(e) => {this.props.update(this.props.id, {completed: e.target.checked})}}\n        />\n        {\n          this.props.editable ? Editing : Text\n        }\n      </div>\n    )\n  }\n  \n  private handelKeyUp(e: React.KeyboardEvent) {\n    if (e.key === \"Enter\" && this.state.editText !== \"\") {\n      this.props.update(this.props.id, {description: this.state.editText})\n    }\n  }\n  \n  \n  private submit() {\n    if (this.state.editText !== \"\") {\n      this.props.update(this.props.id, {description: this.state.editText})\n    }\n  }\n  \n  private handleEditTextChange = (val: string) => {\n    this.setState({editText: val})\n  }\n}\n\nexport default TodoItem\n","import React, {Component} from \"react\"\nimport {connect} from \"react-redux\"\nimport {editTodo, updateTodo} from \"../../redux/actions/todoActions\"\nimport TodoInput from \"./TodoInput\"\nimport TodoItem from \"./TodoItem\"\nimport axios from \"config/axios\"\nimport \"./Todos.scss\"\n\n\nclass Todos extends Component<any> {\n  \n  get unCompletedTodos() {\n    return this.unDeletedTodos.filter((t: ITodo) => !t.completed)\n  }\n  \n  get unDeletedTodos() {\n    return this.props.todos.filter((t: ITodo) => !t.deleted)\n  }\n  \n  get completedTodos() {\n    return this.unDeletedTodos.filter((t: ITodo) => t.completed)\n  }\n  \n  render() {\n    return (\n      <div className={\"Todos\"} id={\"Todos\"}>\n        <TodoInput/>\n        <div className={\"todoList\"}>\n          {this.unCompletedTodos.map((todo: ITodo) => <TodoItem key={todo.id} {...todo} update={this.postTodo}\n                                                                editTodo={this.isTodoEditable}/>)}\n          {\n            this.completedTodos.map((todo: ITodo) => <TodoItem key={todo.id} {...todo} update={this.postTodo}\n                                                               editTodo={this.isTodoEditable}/>)\n          }\n        </div>\n      </div>\n    )\n  }\n  \n  isTodoEditable = (id: number) => {\n    this.props.editTodo(id)\n  }\n  \n  postTodo = async (id: number, params: any) => {\n    if (params.completed) {\n      params.completed_at = new Date()\n    }\n    try {\n      const response = await axios.put(`todos/${id}`, params)\n      this.props.updateTodo(response.data.resource)\n    } catch (e) {\n      throw new Error(e)\n    }\n  }\n}\n\ninterface IMSTPTodos {\n  todos: Array<ITodoExtend>\n  \n  [propName: string]: any\n}\n\nconst mapStateToProps: (state: ITodosState, ownProps: any) => IMSTPTodos = (state, ownProps) => {\n  return {\n    todos: state.todos,\n    ...ownProps\n  }\n}\nconst mapDispatchToProps = {\n  editTodo,\n  updateTodo\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Todos)\n","import React, {Component} from \"react\"\r\nimport {Dropdown, Icon, Menu} from \"antd\"\r\nimport axios from \"config/axios\"\r\nimport \"./Home.scss\"\r\nimport {connect} from \"react-redux\"\r\nimport {initTodos} from \"../../redux/actions/todoActions\"\r\nimport {initTomatoes} from \"../../redux/actions/tomatoActions\"\r\nimport Statistics from \"../Statistics/Statistics\"\r\nimport Tomatoes from \"../Tomatoes/Tomatoes\"\r\nimport Todos from \"../Todos/Todos\"\r\n\r\ninterface IIndexState {\r\n  user: any\r\n}\r\n\r\nconst Tomato = Icon.createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_808628_b6nuh19mmf5.js\",\r\n})\r\n\r\nclass Home extends Component<any, IIndexState> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      user: {}\r\n    }\r\n  }\r\n  \r\n  logout = () => {\r\n    localStorage.setItem(\"x-token\", \"\")\r\n    this.props.history.push(\"/login\")\r\n  }\r\n  \r\n  async UNSAFE_componentWillMount() {\r\n    await this.getMe()\r\n    await this.getTodos()\r\n    await this.getTomatoes()\r\n  }\r\n  \r\n  getMe = async () => {\r\n    const response = await axios.get(\"me\")\r\n    this.setState({user: response.data})\r\n  }\r\n  getTodos = async () => {\r\n    try {\r\n      const response = await axios.get(\"todos\")\r\n      const todos = response.data.resources.map((t: any) => Object.assign({}, t, {editable: false}))\r\n      this.props.initTodos(todos)\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    }\r\n  }\r\n  getTomatoes = async () => {\r\n    try {\r\n      const response = await axios.get(\"tomatoes\")\r\n      this.props.initTomatoes(response.data.resources)\r\n    } catch (e) {\r\n      throw new Error()\r\n    }\r\n  }\r\n  \r\n  render(): React.ReactNode {\r\n    const menu = (\r\n      <Menu style={{textAlign: \"right\"}}>\r\n        <Menu.Item>\r\n          <span onClick={(e) => {e.preventDefault()}}>\r\n            偏好设置&nbsp;<Icon type={\"setting\"}/>\r\n          </span>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <span onClick={(e) => {\r\n            e.preventDefault()\r\n            this.logout()\r\n          }}>退出登录&nbsp;<Icon type={\"logout\"}/></span>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n    return (\r\n      <div className={\"Home\"} id={\"Home\"}>\r\n        <header>\r\n          <span className=\"logo\">\r\n            <Tomato type={\"i-Tomato\"} className={\"icon\"}/>\r\n          </span>\r\n          <Dropdown overlay={menu}>\r\n            <span\r\n              className=\"ant-dropdown-link\"\r\n              onClick={e => e.preventDefault()}\r\n              style={{color: \"#1890ff\", cursor: \"pointer\", fontSize: \"1rem\"}}\r\n            >\r\n              你好, {this.state.user?.account} <Icon type=\"down\"/>\r\n            </span>\r\n          </Dropdown>\r\n        </header>\r\n        <main>\r\n          <Tomatoes/>\r\n          <Todos/>\r\n        </main>\r\n        <footer>\r\n          <Statistics/>\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any, ownProps: any) => {\r\n  return {\r\n    ...ownProps\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  initTodos,\r\n  initTomatoes\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\r\n","import React, {Component} from \"react\"\r\nimport {Button, Icon, Input} from \"antd\"\r\nimport axios from \"../../config/axios\"\r\nimport {Link} from \"react-router-dom\"\r\nimport \"./Login.scss\"\r\nimport {ACCOUNT, PASSWORD} from \"../../constants/Sign\"\r\n\r\ninterface ILogin {\r\n  account: string\r\n  password: string\r\n}\r\n\r\n\r\nexport default class Login extends Component<any, ILogin> {\r\n  private onChange: (name: \"account\" | \"password\", value: string) => void = (name, value) => {\r\n    const newState: any = {}\r\n    newState[name] = value\r\n    this.setState(newState)\r\n  }\r\n  private submit: () => void = async () => {\r\n    const {account, password} = this.state\r\n    \r\n    try {\r\n      await axios.post(\"sign_in/user\", {\r\n        [ACCOUNT]: account, [PASSWORD]: password\r\n      })\r\n      console.log(\"成功\")\r\n      this.props.history.push(\"/\")\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    } finally {\r\n      console.log(\"over\")\r\n    }\r\n  }\r\n  \r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      account: \"\",\r\n      password: \"\",\r\n    }\r\n  }\r\n  \r\n  render(): React.ReactNode {\r\n    const {account, password} = this.state\r\n    return (\r\n      <div className={\"Login\"} id={\"Login\"}>\r\n        <h1>Pomodoro 登录</h1>\r\n        <Input\r\n          placeholder={\"输入用户名\"}\r\n          prefix={<Icon\r\n            type={\"user\"}\r\n            style={{color: \"rgba(0,0,0.25)\"}}\r\n          />}\r\n          value={account}\r\n          onChange={(e) => { this.onChange(\"account\", e.target.value)}}\r\n        />\r\n        <Input.Password\r\n          placeholder=\"输入密码\"\r\n          value={password}\r\n          onChange={(e) => { this.onChange(\"password\", e.target.value)}}\r\n          onKeyDown={(e) => {this.handleKeyDown(e.key)}}\r\n        />\r\n        <Button\r\n          onClick={this.submit}\r\n          className={\"loginButton\"}\r\n          type={\"primary\"}\r\n        >\r\n          登录\r\n        </Button>\r\n        <p>没有账号? <Link to={\"/signup\"}>注册</Link>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n  \r\n  \r\n  private handleKeyDown(value: string) {\r\n    if (value === \"Enter\") {\r\n      this.submit()\r\n    }\r\n  }\r\n}\r\n\r\n","import React, {Component} from \"react\"\r\nimport {Button, Icon, Input} from \"antd\"\r\nimport axios from \"config/axios\"\r\nimport {Link} from \"react-router-dom\"\r\nimport \"./SignUp.scss\"\r\nimport {ACCOUNT, CONFIRM, PASSWORD} from \"constants/Sign\"\r\n\r\ninterface ISignUp {\r\n  account: string\r\n  password: string\r\n  passwordConfirmed: string\r\n}\r\n\r\nexport default class SignUp extends Component<any, ISignUp> {\r\n  \r\n  private onChange: (name: \"account\" | \"password\" | \"passwordConfirmed\", value: string) => void = (name, value) => {\r\n    const newState: ISignUp = {account: \"\", password: \"\", passwordConfirmed: \"\"}\r\n    newState[name] = value\r\n    this.setState(newState)\r\n  }\r\n  private submit: () => void = async () => {\r\n    const {account, password, passwordConfirmed} = this.state\r\n    \r\n    try {\r\n      await axios.post(\"sign_up/user\", {\r\n        [ACCOUNT]: account, [PASSWORD]: password, [CONFIRM]: passwordConfirmed\r\n      })\r\n      console.log(\"成功\")\r\n      this.props.history.push(\"/\")\r\n    } catch (e) {\r\n      throw new Error(e)\r\n    } finally {\r\n      console.log(\"over\")\r\n    }\r\n  }\r\n  \r\n  private handleKeyDown(value: string) {\r\n    if (value === \"Enter\") {\r\n      this.submit()\r\n    }\r\n  }\r\n  \r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      account: \"\",\r\n      password: \"\",\r\n      passwordConfirmed: \"\"\r\n    }\r\n  }\r\n  \r\n  render(): React.ReactNode {\r\n    const {account, password, passwordConfirmed} = this.state\r\n    return (\r\n      <div className={\"SignUp\"} id={\"SignUp\"}>\r\n        <h1>Pomodoro 注册</h1>\r\n        <Input\r\n          placeholder={\"输入用户名\"}\r\n          prefix={<Icon\r\n            type={\"user\"}\r\n            style={{color: \"rgba(0,0,0.25)\"}}\r\n          />}\r\n          value={account}\r\n          onChange={(e) => { this.onChange(\"account\", e.target.value)}}\r\n        />\r\n        <Input.Password\r\n          placeholder=\"输入密码\"\r\n          value={password}\r\n          onChange={(e) => { this.onChange(\"password\", e.target.value)}}\r\n        />\r\n        <Input.Password\r\n          placeholder=\"请再次输入密码\"\r\n          value={passwordConfirmed}\r\n          onChange={(e) => { this.onChange(\"passwordConfirmed\", e.target.value)}}\r\n          onKeyDown={(e) => {this.handleKeyDown(e.key)}}\r\n        />\r\n        <Button\r\n          onClick={this.submit}\r\n          className={\"signUpButton\"}\r\n          type={\"primary\"}\r\n        >\r\n          注册\r\n        </Button>\r\n        <p>已有账号? <Link to={\"/login\"}>登录</Link>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from \"react\"\nimport \"./index.css\"\nimport {Route, Router} from \"react-router-dom\"\nimport Home from \"./components/Home/Home\"\nimport Login from \"./components/Login/Login\"\nimport SignUp from \"./components/SignUp/SignUp\"\nimport history from \"./config/history\"\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Route exact={true} path={\"/\"} component={Home}/>\n      <Route path={\"/login\"} component={Login}/>\n      <Route path={\"/signup\"} component={SignUp}/>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\"\r\nimport todos from \"./todos\"\r\nimport tomatoes from \"./tomatoes\"\r\n\r\nexport default combineReducers({todos, tomatoes})\r\n","import {ADD_TODO, EDIT_TODO, INIT_TODOS, UPDATE_TODO} from \"../actionTypes\"\n\nexport default function (state: Array<ITodoExtend> = [], action: any) {\n  switch (action.type) {\n    case ADD_TODO:\n      return [...state, action.payload]\n    case INIT_TODOS:\n      return [...action.payload]\n    case EDIT_TODO:\n      return state.map(t => {\n        if (t.id === action.payload) {\n          return Object.assign({}, t, {editable: !t.editable})\n        } else {\n          return Object.assign({}, t, {editable: false})\n        }\n      })\n    case UPDATE_TODO:\n      return state.map(t => t.id === action.payload.id ? action.payload : t)\n    default:\n      return state\n  }\n}\n","import {ADD_TOMATO, INIT_TOMATOES, UPDATE_TOMATO} from \"../actionTypes\"\r\n\r\nexport default (state: any = [], action: any) => {\r\n  switch (action.type) {\r\n    case ADD_TOMATO:\r\n      return [action.payload, ...state]\r\n    case INIT_TOMATOES:\r\n      return [...action.payload]\r\n    case UPDATE_TOMATO:\r\n      return state.map((t: any) => t.id === action.payload.id ? action.payload : t)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import {createStore} from \"redux\"\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport \"antd/dist/antd.css\"\nimport \"./index.css\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport {Provider} from \"react-redux\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}><App/></Provider>, document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}